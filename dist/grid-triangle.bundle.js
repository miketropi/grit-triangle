(()=>{"use strict";window.GridTriangle=class{constructor(i,r){return this.el=i,this.params=r,this.render(),this}_mockup(){return'<div class="grid-triangle">\n      <div class="grid-triangle--box">\n        <div class="grid-triangle--box-inner">\n          <div class="grid-triangle--image grid-triangle--u"></div>\n          <div class="grid-triangle--image grid-triangle--d"></div>\n        </div>\n      </div>\n      <div class="grid-triangle--box">\n        <div class="grid-triangle--box-inner">\n          <div class="grid-triangle--image grid-triangle--u"></div>\n          <div class="grid-triangle--image grid-triangle--d"></div>\n        </div>\n      </div>\n      <div class="grid-triangle--box">\n        <div class="grid-triangle--box-inner">\n          <div class="grid-triangle--image grid-triangle--u"></div>\n          <div class="grid-triangle--image grid-triangle--d"></div>\n        </div>\n      </div>\n      <div class="grid-triangle--box">\n        <div class="grid-triangle--box-inner">\n          <div class="grid-triangle--image grid-triangle--u"></div>\n        </div>\n      </div>\n      <div class="grid-triangle--box">\n        <div class="grid-triangle--box-inner">\n          <div class="grid-triangle--image grid-triangle--u"></div>\n        </div>\n      </div>\n    </div>'}setImage(i,r){this.triangleImageArr[i].style.backgroundImage=`url(${r})`}render(){let i=this._mockup(),r=(new DOMParser).parseFromString(i,"text/html"),n=r.querySelectorAll(".grid-triangle--image");this.triangleImageArr=[...n],this.params.images.forEach(((i,r)=>{this.setImage(r,i.url)})),this.el.appendChild(r.querySelector(".grid-triangle"))}}})();